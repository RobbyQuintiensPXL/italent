{"version":3,"sources":["./src/app/components/about/about.component.ts","./src/app/components/about/about.component.html","./src/app/components/header/header.component.ts","./src/app/components/header/header.component.html","./src/app/components/projects/projects.component.ts","./src/app/components/projects/projects.component.html","./src/environments/environment.ts","./src/app/components/home/home.component.ts","./src/app/components/home/home.component.html","./src/app/components/footer/footer.component.ts","./src/app/components/footer/footer.component.html","./src/app/components/activity/activity.component.ts","./src/app/components/activity/activity.component.html","./src/app/components/app/app.component.ts","./src/app/components/app/app.component.html","./src/app/shared/services/activity.service.ts","./src/app/app.module.ts","./src/environments/environment.prod.ts","./src/app/components/navbar/navbar.component.ts","./src/app/components/navbar/navbar.component.html","./src/app/shared/services/in-memory-data.service.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.css']\n})\nexport class AboutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<section class=\"page-section text mb-0 pb-0\" id=\"about\" mdbScrollspyElement=\"scrollspy\">\n  <div class=\"container\">\n    <h2 class=\"page-section-heading text-center text-uppercase text-secondary mb-0\">\n      about me</h2>\n    <div class=\"row justify-content-center space\">\n      <div class=\"col-lg-8\">\n        <p class=\"lead\">\n          Hi, my name is Quintiens Robby.\n        </p>\n        <p class=\"lead\">\n          Before even graduating I started as a consultant full-stack developer for JArchitects.\n          At the moment I'm working at Ravago. It's one of the biggest companies in Belgium (and over the world).\n          So it's a really good place to learn and create an expertise in both front end and back end development.\n        </p>\n        <p class=\"lead\">\n          I'm passionated about new technologies and design. My next goal is to learn more about UI and UX.\n        </p>\n      </div>\n    </div>\n  </div>\n</section>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<header class=\"masthead text-white text-center\">\n  <div class=\"container d-flex align-items-center flex-column\">\n    <img class=\"masthead-avatar mb-2 rounded-circle\" src=\"assets/img/meandjuul.jpeg\" alt=\"\" />\n    <h1 class=\"masthead-heading text-black-50 text-uppercase mb-0\">Robby Quintiens</h1>\n    <p class=\"masthead-subheading text-black-50 font-weight-light mb-0\">Consultant Full-stack developer</p>\n    <p class=\"masthead-subheading text-black-50 font-weight-light mb-0\">iTalent</p>\n    <p class=\"opacity text-black-50\">[àjtellent]</p>\n  </div>\n</header>\n","import { Component, OnInit } from '@angular/core';\nimport {Activity} from '../../shared/classes/activity';\nimport {ActivityService} from '../../shared/services/activity.service';\n\n@Component({\n  selector: 'app-projects',\n  templateUrl: './projects.component.html',\n  styleUrls: ['./projects.component.css']\n})\nexport class ProjectsComponent implements OnInit {\n  projects: Activity[];\n\n  constructor(private activityService: ActivityService) { }\n\n  ngOnInit(): void {\n    this.getProjects();\n  }\n\n  getProjects(): void{\n    this.activityService.getProjects().subscribe(data => this.projects = data);\n  }\n}\n","<section class=\"page-section projects\" id=\"projects\">\n  <div class=\"container\">\n    <!-- project Section Heading-->\n    <h2 class=\"page-section-heading text-center text-uppercase text-secondary mb-0\">\n      Projects</h2>\n    <div class=\"row justify-content-center\">\n      <app-activity *ngFor=\"let project of projects\" [activity]=\"project\"></app-activity>\n    </div>\n\n  </div>\n</section>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div>\n  <app-header></app-header>\n  <app-about></app-about>\n  <app-projects></app-projects>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<!-- Copyright Section-->\n<div class=\"footer py-4 text-center text-white\">\n  <div class=\"container\">\n    <h4 class=\"text-uppercase\">Connect with me</h4>\n    <a class=\"btn btn-outline-light btn-social mx-1\" target=\"_blank\" href=\"https://www.linkedin.com/in/robby-quintiens-aa424487\"><i class=\"fab fa-fw fa-linkedin-in\"></i></a>\n    <a class=\"btn btn-outline-light btn-social mx-1\" target=\"_blank\" href=\"https://github.com/robbyquintiensPXL\"><i class=\"fab fa-fw fa-github\"></i></a>\n  </div>\n</div>\n","import {Component, Input, OnInit} from '@angular/core';\nimport {Activity} from '../../shared/classes/activity';\n\n@Component({\n  selector: 'app-activity',\n  templateUrl: './activity.component.html',\n  styleUrls: ['./activity.component.css']\n})\nexport class ActivityComponent implements OnInit {\n  @Input() activity: Activity;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"col-lg-3 m-3 mb-0 activity\" data-toggle=\"modal\" (click)=\"modal.show()\">\n  <img class=\"img-fluid max-height\" src=\"{{activity.imgThumb}}\" alt=\"{{activity.name}}\"/>\n  <h4 class=\"text-center\">{{activity.name}}</h4>\n</div>\n\n<div mdbModal #modal=\"mdbModal\" class=\"portfolio-modal modal fade\" tabindex=\"-1\" role=\"dialog\">\n  <div class=\"modal-dialog modal-xl\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-body text-center\">\n        <div class=\"container\">\n          <div class=\"row justify-content-center\">\n            <div class=\"col-lg-8\">\n              <!-- Portfolio Modal - Title-->\n              <h2 class=\"portfolio-modal-title text-secondary text-uppercase mb-0\"\n                  id=\"portfolioModal1Label\">{{activity.name}}</h2>\n              <!-- Portfolio Modal - Image-->\n              <div class=\"row\">\n                <div class=\"column\">\n                  <img class=\"img-fluid rounded mb-5 max-height-modal extra-padding\" src=\"{{activity.imgOne}}\"\n                       alt=\"{{activity.name}}\"/>\n                </div>\n                <div class=\"column\">\n                  <img class=\"img-fluid rounded mb-5 max-height-modal extra-padding\" src=\"{{activity.imgTwo}}\"\n                       alt=\"{{activity.name}}\"/>\n                </div>\n                <div class=\"column\" *ngIf=\"activity.imgThree != null\">\n                  <img class=\"img-fluid rounded mb-5 max-height-modal extra-padding\" src=\"{{activity.imgThree}}\"\n                       alt=\"{{activity.name}}\"/>\n                </div>\n              </div>\n              <!-- Portfolio Modal - Text-->\n              <p class=\"mb-5\">{{activity.description}}</p>\n              <button class=\"btn btn-primary\" data-dismiss=\"modal\" (click)=\"modal.hide()\">\n                <i class=\"fas fa-times fa-fw\"></i>\n                Close Window\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Robby Quintiens';\n}\n","<app-navbar></app-navbar>\n<app-home></app-home>\n<app-footer></app-footer>\n","import { Injectable } from '@angular/core';\nimport {environment} from '../../../environments/environment.prod';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {Activity} from '../classes/activity';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ActivityService {\n  projectAPI = environment.PROJECT_API;\n\n  constructor(private http: HttpClient) { }\n  getProjects(): Observable<Activity[]>{\n    return this.http.get<Activity[]>(this.projectAPI);\n  }\n\n}\n","import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\nimport {AppComponent} from './components/app/app.component';\nimport {NavbarComponent} from './components/navbar/navbar.component';\nimport {ProjectsComponent} from './components/projects/projects.component';\nimport {AboutComponent} from './components/about/about.component';\nimport {HeaderComponent} from './components/header/header.component';\nimport {FooterComponent} from './components/footer/footer.component';\nimport {HttpClientModule} from '@angular/common/http';\nimport {HttpClientInMemoryWebApiModule} from 'angular-in-memory-web-api';\nimport {InMemoryDataService} from './shared/services/in-memory-data.service';\nimport {MdbCollapseModule, MdbScrollspyModule} from 'mdb-angular-ui-kit';\nimport {ActivityComponent} from './components/activity/activity.component';\nimport { HomeComponent } from './components/home/home.component';\nimport {ModalModule} from 'angular-bootstrap-md';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    ProjectsComponent,\n    AboutComponent,\n    HeaderComponent,\n    FooterComponent,\n    ActivityComponent,\n    HomeComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    HttpClientInMemoryWebApiModule.forRoot(InMemoryDataService),\n    MdbCollapseModule,\n    MdbScrollspyModule,\n    ModalModule.forRoot(),\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","export const environment = {\n  ACTIVITY_API: 'api/activity',\n  PROJECT_API: 'api/project',\n  production: true\n};\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<nav class=\"navbar navbar-expand-lg secondary-background text-uppercase fixed-top\" id=\"mainNav\">\n  <div class=\"container\">\n    <a class=\"navbar-brand\" href=\"#\">iTalent</a>\n    <button\n      class=\"navbar-toggler navbar-toggler-right text-uppercase font-weight-bold primary-background text-white rounded\"\n      type=\"button\"\n      (click)=\"basicNav.toggle()\"\n      aria-expanded=\"false\"\n      aria-label=\"Toggle navigation\"\n    >\n      <i class=\"fas fa-bars\"></i>\n    </button>\n    <div\n      class=\"collapse navbar-collapse flex-row-reverse\"\n      id=\"navbarNav\"\n      mdbCollapse\n      #basicNav=\"mdbCollapse\"\n    >\n      <ul class=\"navbar-nav\">\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" aria-current=\"page\" href=\"#about\">About</a>\n        </li>\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" href=\"#projects\">Projects</a>\n        </li>\n      </ul>\n    </div>\n  </div>\n</nav>\n\n\n\n","import {Injectable} from '@angular/core';\nimport {InMemoryDbService} from 'angular-in-memory-web-api';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class InMemoryDataService implements InMemoryDbService {\n  createDb(): any {\n    const project = [\n      {\n        id: 1,\n        name: 'Flutter',\n        imgThumb: 'assets/img/projects/flutter.png',\n        imgOne: 'assets/img/projects/flutter01.png',\n        imgTwo: 'assets/img/projects/flutter02.png',\n        description: 'I developed a small fraction of a front end application in Flutter. The back end was created in Java with the Spring Boot' +\n          'framework. These screenshots represents an application to find and book hotels based on location, country, region,..' +\n          'To learn Dart was quite a steep learning curve, especially for the design aspects.'\n      },\n      {\n        id: 2,\n        name: 'AWS',\n        imgThumb: 'assets/img/projects/aws.jpeg',\n        imgOne: 'assets/img/projects/AWS01.png',\n        imgTwo: 'assets/img/projects/AWS02.png',\n        description: 'If previous mentioned hotel applicaton needed to be hosted, it is necessary that the code needs to deployed ' +\n          'somewhere. Therefor I chose AWS to create a complete pipeline. This pipeline is connected to SonarCloud for code quality to provide ' +\n          'valid production code.'\n      },\n      {\n        id: 3,\n        name: 'SonarCloud',\n        imgThumb: 'assets/img/projects/sonarcloud.png',\n        imgOne: 'assets/img/projects/sonar01.png',\n        imgTwo: 'assets/img/projects/sonar02.png',\n        description: 'SonarCloud is a tool created for continuous inspection of code quality to perform automatic reviews with static analysis of code to fix bugs and code smells ' +\n          'Jacoco is the intern dependency in Java which does the first analysing and provides this to SonarCloud to create the necessary reports. ' +\n          'SonarCloud is connected to a version of control, in this example Github Actions is used, for those continuous inspection.'\n      },\n      {\n        id: 4,\n        name: 'Github Actions',\n        imgThumb: 'assets/img/projects/gh.png',\n        imgOne: 'assets/img/projects/GH01.png',\n        imgTwo: 'assets/img/projects/GH02.png',\n        description: 'Github Actions was used to create a YAML-file to create continuous inspection for SonarCloud.'\n      },\n      {\n        id: 5,\n        name: 'Extra',\n        imgThumb: 'assets/img/projects/extr.png',\n        imgOne: 'assets/img/projects/carShop.png',\n        imgTwo: 'assets/img/projects/microservices01.png',\n        description: 'This is a little side-project I am still working on. In this project I make use of ' +\n          'microservices to create a loose coupling of services. For this project I use Consul for creating ' +\n          'a local cloud service mesh and KeyCloak to provide the necessary security. This project represents a ' +\n          'platform for a car dealer, where he/she can easily add new cars.'\n      },\n    ];\n    return {project};\n  }\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}